// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using Microsoft.Azure;
using Microsoft.Azure.Commands.Compute.Automation.Models;
using Microsoft.Azure.Management.Compute;
using Microsoft.Azure.Management.Compute.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;

namespace Microsoft.Azure.Commands.Compute.Automation
{
    [Cmdlet(VerbsCommon.New, "AzureComputeArgumentList", DefaultParameterSetName = "CreateParameterListByMethodName")]
    [OutputType(typeof(object))]
    public partial class NewAzureComputeArgumentListCmdlet : ComputeAutomationBaseCmdlet
    {
        [Parameter(ParameterSetName = "CreateParameterListByMethodName", Mandatory = true, Position = 0)]
        [ValidateSet(
            "VirtualMachineScaleSetCreateOrUpdate",
            "VirtualMachineScaleSetDeallocate",
            "VirtualMachineScaleSetDeallocateInstances",
            "VirtualMachineScaleSetDelete",
            "VirtualMachineScaleSetDeleteInstances",
            "VirtualMachineScaleSetGet",
            "VirtualMachineScaleSetGetInstanceView",
            "VirtualMachineScaleSetList",
            "VirtualMachineScaleSetListAll",
            "VirtualMachineScaleSetListNext",
            "VirtualMachineScaleSetListSkus",
            "VirtualMachineScaleSetPowerOff",
            "VirtualMachineScaleSetPowerOffInstances",
            "VirtualMachineScaleSetRestart",
            "VirtualMachineScaleSetRestartInstances",
            "VirtualMachineScaleSetStart",
            "VirtualMachineScaleSetStartInstances",
            "VirtualMachineScaleSetUpdateInstances",
            "VirtualMachineScaleSetVMDeallocate",
            "VirtualMachineScaleSetVMDelete",
            "VirtualMachineScaleSetVMGet",
            "VirtualMachineScaleSetVMGetInstanceView",
            "VirtualMachineScaleSetVMList",
            "VirtualMachineScaleSetVMPowerOff",
            "VirtualMachineScaleSetVMRestart",
            "VirtualMachineScaleSetVMStart"
        )]
        public virtual string MethodName { get; set; }

        protected override void ProcessRecord()
        {
            base.ProcessRecord();
            ExecuteClientAction(() =>
            {
                if (ParameterSetName == "CreateParameterListByMethodName")
                {
                    switch (MethodName)
                    {
                        case "VirtualMachineScaleSetCreateOrUpdate" : WriteObject(CreateVirtualMachineScaleSetCreateOrUpdateParameters(), true); break;
                        case "VirtualMachineScaleSetDeallocate" : WriteObject(CreateVirtualMachineScaleSetDeallocateParameters(), true); break;
                        case "VirtualMachineScaleSetDeallocateInstances" : WriteObject(CreateVirtualMachineScaleSetDeallocateInstancesParameters(), true); break;
                        case "VirtualMachineScaleSetDelete" : WriteObject(CreateVirtualMachineScaleSetDeleteParameters(), true); break;
                        case "VirtualMachineScaleSetDeleteInstances" : WriteObject(CreateVirtualMachineScaleSetDeleteInstancesParameters(), true); break;
                        case "VirtualMachineScaleSetGet" : WriteObject(CreateVirtualMachineScaleSetGetParameters(), true); break;
                        case "VirtualMachineScaleSetGetInstanceView" : WriteObject(CreateVirtualMachineScaleSetGetInstanceViewParameters(), true); break;
                        case "VirtualMachineScaleSetList" : WriteObject(CreateVirtualMachineScaleSetListParameters(), true); break;
                        case "VirtualMachineScaleSetListAll" : WriteObject(CreateVirtualMachineScaleSetListAllParameters(), true); break;
                        case "VirtualMachineScaleSetListNext" : WriteObject(CreateVirtualMachineScaleSetListNextParameters(), true); break;
                        case "VirtualMachineScaleSetListSkus" : WriteObject(CreateVirtualMachineScaleSetListSkusParameters(), true); break;
                        case "VirtualMachineScaleSetPowerOff" : WriteObject(CreateVirtualMachineScaleSetPowerOffParameters(), true); break;
                        case "VirtualMachineScaleSetPowerOffInstances" : WriteObject(CreateVirtualMachineScaleSetPowerOffInstancesParameters(), true); break;
                        case "VirtualMachineScaleSetRestart" : WriteObject(CreateVirtualMachineScaleSetRestartParameters(), true); break;
                        case "VirtualMachineScaleSetRestartInstances" : WriteObject(CreateVirtualMachineScaleSetRestartInstancesParameters(), true); break;
                        case "VirtualMachineScaleSetStart" : WriteObject(CreateVirtualMachineScaleSetStartParameters(), true); break;
                        case "VirtualMachineScaleSetStartInstances" : WriteObject(CreateVirtualMachineScaleSetStartInstancesParameters(), true); break;
                        case "VirtualMachineScaleSetUpdateInstances" : WriteObject(CreateVirtualMachineScaleSetUpdateInstancesParameters(), true); break;
                        case "VirtualMachineScaleSetVMDeallocate" : WriteObject(CreateVirtualMachineScaleSetVMDeallocateParameters(), true); break;
                        case "VirtualMachineScaleSetVMDelete" : WriteObject(CreateVirtualMachineScaleSetVMDeleteParameters(), true); break;
                        case "VirtualMachineScaleSetVMGet" : WriteObject(CreateVirtualMachineScaleSetVMGetParameters(), true); break;
                        case "VirtualMachineScaleSetVMGetInstanceView" : WriteObject(CreateVirtualMachineScaleSetVMGetInstanceViewParameters(), true); break;
                        case "VirtualMachineScaleSetVMList" : WriteObject(CreateVirtualMachineScaleSetVMListParameters(), true); break;
                        case "VirtualMachineScaleSetVMPowerOff" : WriteObject(CreateVirtualMachineScaleSetVMPowerOffParameters(), true); break;
                        case "VirtualMachineScaleSetVMRestart" : WriteObject(CreateVirtualMachineScaleSetVMRestartParameters(), true); break;
                        case "VirtualMachineScaleSetVMStart" : WriteObject(CreateVirtualMachineScaleSetVMStartParameters(), true); break;
                        default : WriteWarning("Cannot find the method by name = '" + MethodName + "'."); break;
                    }
                }
            });
        }

    }
}
