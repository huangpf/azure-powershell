// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using Microsoft.Azure;
using Microsoft.Azure.Commands.Network.Automation.Models;
using Microsoft.Azure.Management.Network;
using Microsoft.Azure.Management.Network.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;

namespace Microsoft.Azure.Commands.Network.Automation
{
    [Cmdlet(VerbsCommon.New, "AzureNetworkParameterObject", DefaultParameterSetName = "CreateParameterObjectByFullName")]
    [OutputType(typeof(object))]
    public partial class NewAzureNetworkParameterObjectCmdlet : NetworkAutomationBaseCmdlet
    {
        [Parameter(ParameterSetName = "CreateParameterObjectByFriendlyName", Mandatory = true, Position = 0)]
        [ValidateSet(
            "VirtualNetworkGatewayConnectionsAddressSpace",
            "VirtualNetworkGatewayConnectionsConnectionResetSharedKey",
            "VirtualNetworkGatewayConnectionsConnectionSharedKey",
            "VirtualNetworkGatewayConnectionsLocalNetworkGateway",
            "VirtualNetworkGatewayConnectionsSubResource",
            "VirtualNetworkGatewayConnectionsVirtualNetworkGateway",
            "VirtualNetworkGatewayConnectionsVirtualNetworkGatewayConnection",
            "VirtualNetworkGatewayConnectionsVirtualNetworkGatewayIPConfiguration",
            "VirtualNetworkGatewayConnectionsVirtualNetworkGatewayIPConfigurationList",
            "VirtualNetworkGatewayConnectionsVirtualNetworkGatewaySku",
            "VirtualNetworkGatewayConnectionsVpnClientConfiguration",
            "VirtualNetworkGatewayConnectionsVpnClientRevokedCertificate",
            "VirtualNetworkGatewayConnectionsVpnClientRevokedCertificateList",
            "VirtualNetworkGatewayConnectionsVpnClientRootCertificate",
            "VirtualNetworkGatewayConnectionsVpnClientRootCertificateList",
            "VirtualNetworksAddressSpace",
            "VirtualNetworksDhcpOptions",
            "VirtualNetworksSubnet",
            "VirtualNetworksSubnetList",
            "VirtualNetworksVirtualNetwork"
        )]
        public string FriendlyName { get; set; }

        [Parameter(ParameterSetName = "CreateParameterObjectByFullName", Mandatory = true, Position = 0)]
        [ValidateSet(
            "Microsoft.Azure.Management.Network.Models.AddressSpace",
            "Microsoft.Azure.Management.Network.Models.ConnectionResetSharedKey",
            "Microsoft.Azure.Management.Network.Models.ConnectionSharedKey",
            "Microsoft.Azure.Management.Network.Models.DhcpOptions",
            "Microsoft.Azure.Management.Network.Models.LocalNetworkGateway",
            "Microsoft.Azure.Management.Network.Models.Subnet",
            "Microsoft.Azure.Management.Network.Models.SubResource",
            "Microsoft.Azure.Management.Network.Models.VirtualNetwork",
            "Microsoft.Azure.Management.Network.Models.VirtualNetworkGateway",
            "Microsoft.Azure.Management.Network.Models.VirtualNetworkGatewayConnection",
            "Microsoft.Azure.Management.Network.Models.VirtualNetworkGatewayIPConfiguration",
            "Microsoft.Azure.Management.Network.Models.VirtualNetworkGatewaySku",
            "Microsoft.Azure.Management.Network.Models.VpnClientConfiguration",
            "Microsoft.Azure.Management.Network.Models.VpnClientRevokedCertificate",
            "Microsoft.Azure.Management.Network.Models.VpnClientRootCertificate",
            "System.Collections.Generic.List<Subnet>",
            "System.Collections.Generic.List<VirtualNetworkGatewayIPConfiguration>",
            "System.Collections.Generic.List<VpnClientRevokedCertificate>",
            "System.Collections.Generic.List<VpnClientRootCertificate>"
        )]
        public string FullName { get; set; }

        protected override void ProcessRecord()
        {
            base.ProcessRecord();
            ExecuteClientAction(() =>
            {
                if (ParameterSetName == "CreateParameterObjectByFriendlyName")
                {
                    switch (FriendlyName)
                    {
                        case "VirtualNetworkGatewayConnectionsAddressSpace" : WriteObject(new AddressSpace()); break;
                        case "VirtualNetworkGatewayConnectionsConnectionResetSharedKey" : WriteObject(new ConnectionResetSharedKey()); break;
                        case "VirtualNetworkGatewayConnectionsConnectionSharedKey" : WriteObject(new ConnectionSharedKey()); break;
                        case "VirtualNetworkGatewayConnectionsLocalNetworkGateway" : WriteObject(new LocalNetworkGateway()); break;
                        case "VirtualNetworkGatewayConnectionsSubResource" : WriteObject(new SubResource()); break;
                        case "VirtualNetworkGatewayConnectionsVirtualNetworkGateway" : WriteObject(new VirtualNetworkGateway()); break;
                        case "VirtualNetworkGatewayConnectionsVirtualNetworkGatewayConnection" : WriteObject(new VirtualNetworkGatewayConnection()); break;
                        case "VirtualNetworkGatewayConnectionsVirtualNetworkGatewayIPConfiguration" : WriteObject(new VirtualNetworkGatewayIPConfiguration()); break;
                        case "VirtualNetworkGatewayConnectionsVirtualNetworkGatewayIPConfigurationList" : WriteObject(new List<VirtualNetworkGatewayIPConfiguration>()); break;
                        case "VirtualNetworkGatewayConnectionsVirtualNetworkGatewaySku" : WriteObject(new VirtualNetworkGatewaySku()); break;
                        case "VirtualNetworkGatewayConnectionsVpnClientConfiguration" : WriteObject(new VpnClientConfiguration()); break;
                        case "VirtualNetworkGatewayConnectionsVpnClientRevokedCertificate" : WriteObject(new VpnClientRevokedCertificate()); break;
                        case "VirtualNetworkGatewayConnectionsVpnClientRevokedCertificateList" : WriteObject(new List<VpnClientRevokedCertificate>()); break;
                        case "VirtualNetworkGatewayConnectionsVpnClientRootCertificate" : WriteObject(new VpnClientRootCertificate()); break;
                        case "VirtualNetworkGatewayConnectionsVpnClientRootCertificateList" : WriteObject(new List<VpnClientRootCertificate>()); break;
                        case "VirtualNetworksAddressSpace" : WriteObject(new AddressSpace()); break;
                        case "VirtualNetworksDhcpOptions" : WriteObject(new DhcpOptions()); break;
                        case "VirtualNetworksSubnet" : WriteObject(new Subnet()); break;
                        case "VirtualNetworksSubnetList" : WriteObject(new List<Subnet>()); break;
                        case "VirtualNetworksVirtualNetwork" : WriteObject(new VirtualNetwork()); break;
                        default : WriteWarning("Cannot find the type by FriendlyName = '" + FriendlyName + "'."); break;
                    }
                }
                else if (ParameterSetName == "CreateParameterObjectByFullName")
                {
                    switch (FullName)
                    {
                        case "Microsoft.Azure.Management.Network.Models.AddressSpace" : WriteObject(new AddressSpace()); break;
                        case "Microsoft.Azure.Management.Network.Models.ConnectionResetSharedKey" : WriteObject(new ConnectionResetSharedKey()); break;
                        case "Microsoft.Azure.Management.Network.Models.ConnectionSharedKey" : WriteObject(new ConnectionSharedKey()); break;
                        case "Microsoft.Azure.Management.Network.Models.DhcpOptions" : WriteObject(new DhcpOptions()); break;
                        case "Microsoft.Azure.Management.Network.Models.LocalNetworkGateway" : WriteObject(new LocalNetworkGateway()); break;
                        case "Microsoft.Azure.Management.Network.Models.Subnet" : WriteObject(new Subnet()); break;
                        case "Microsoft.Azure.Management.Network.Models.SubResource" : WriteObject(new SubResource()); break;
                        case "Microsoft.Azure.Management.Network.Models.VirtualNetwork" : WriteObject(new VirtualNetwork()); break;
                        case "Microsoft.Azure.Management.Network.Models.VirtualNetworkGateway" : WriteObject(new VirtualNetworkGateway()); break;
                        case "Microsoft.Azure.Management.Network.Models.VirtualNetworkGatewayConnection" : WriteObject(new VirtualNetworkGatewayConnection()); break;
                        case "Microsoft.Azure.Management.Network.Models.VirtualNetworkGatewayIPConfiguration" : WriteObject(new VirtualNetworkGatewayIPConfiguration()); break;
                        case "Microsoft.Azure.Management.Network.Models.VirtualNetworkGatewaySku" : WriteObject(new VirtualNetworkGatewaySku()); break;
                        case "Microsoft.Azure.Management.Network.Models.VpnClientConfiguration" : WriteObject(new VpnClientConfiguration()); break;
                        case "Microsoft.Azure.Management.Network.Models.VpnClientRevokedCertificate" : WriteObject(new VpnClientRevokedCertificate()); break;
                        case "Microsoft.Azure.Management.Network.Models.VpnClientRootCertificate" : WriteObject(new VpnClientRootCertificate()); break;
                        case "System.Collections.Generic.List<Subnet>" : WriteObject(new List<Subnet>()); break;
                        case "System.Collections.Generic.List<VirtualNetworkGatewayIPConfiguration>" : WriteObject(new List<VirtualNetworkGatewayIPConfiguration>()); break;
                        case "System.Collections.Generic.List<VpnClientRevokedCertificate>" : WriteObject(new List<VpnClientRevokedCertificate>()); break;
                        case "System.Collections.Generic.List<VpnClientRootCertificate>" : WriteObject(new List<VpnClientRootCertificate>()); break;
                        default : WriteWarning("Cannot find the type by FullName = '" + FullName + "'."); break;
                    }
                }
            });
        }

    }
}
