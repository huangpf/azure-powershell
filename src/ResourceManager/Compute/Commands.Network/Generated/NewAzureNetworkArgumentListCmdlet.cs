// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using Microsoft.Azure;
using Microsoft.Azure.Commands.Network.Automation.Models;
using Microsoft.Azure.Management.Network;
using Microsoft.Azure.Management.Network.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;

namespace Microsoft.Azure.Commands.Network.Automation
{
    [Cmdlet(VerbsCommon.New, "AzureNetworkArgumentList", DefaultParameterSetName = "CreateParameterListByMethodName")]
    [OutputType(typeof(object))]
    public partial class NewAzureNetworkArgumentListCmdlet : NetworkAutomationBaseCmdlet
    {
        [Parameter(ParameterSetName = "CreateParameterListByMethodName", Mandatory = true, Position = 0)]
        [ValidateSet(
            "VirtualNetworkGatewayConnectionsCreateOrUpdate",
            "VirtualNetworkGatewayConnectionsDelete",
            "VirtualNetworkGatewayConnectionsGet",
            "VirtualNetworkGatewayConnectionsGetSharedKey",
            "VirtualNetworkGatewayConnectionsList",
            "VirtualNetworkGatewayConnectionsListNext",
            "VirtualNetworkGatewayConnectionsResetSharedKey",
            "VirtualNetworkGatewayConnectionsSetSharedKey",
            "VirtualNetworksCreateOrUpdate",
            "VirtualNetworksDelete",
            "VirtualNetworksGet",
            "VirtualNetworksList",
            "VirtualNetworksListAll",
            "VirtualNetworksListAllNext",
            "VirtualNetworksListNext"
        )]
        public virtual string MethodName { get; set; }

        protected override void ProcessRecord()
        {
            base.ProcessRecord();
            ExecuteClientAction(() =>
            {
                if (ParameterSetName == "CreateParameterListByMethodName")
                {
                    switch (MethodName)
                    {
                        case "VirtualNetworkGatewayConnectionsCreateOrUpdate" : WriteObject(CreateVirtualNetworkGatewayConnectionsCreateOrUpdateParameters(), true); break;
                        case "VirtualNetworkGatewayConnectionsDelete" : WriteObject(CreateVirtualNetworkGatewayConnectionsDeleteParameters(), true); break;
                        case "VirtualNetworkGatewayConnectionsGet" : WriteObject(CreateVirtualNetworkGatewayConnectionsGetParameters(), true); break;
                        case "VirtualNetworkGatewayConnectionsGetSharedKey" : WriteObject(CreateVirtualNetworkGatewayConnectionsGetSharedKeyParameters(), true); break;
                        case "VirtualNetworkGatewayConnectionsList" : WriteObject(CreateVirtualNetworkGatewayConnectionsListParameters(), true); break;
                        case "VirtualNetworkGatewayConnectionsListNext" : WriteObject(CreateVirtualNetworkGatewayConnectionsListNextParameters(), true); break;
                        case "VirtualNetworkGatewayConnectionsResetSharedKey" : WriteObject(CreateVirtualNetworkGatewayConnectionsResetSharedKeyParameters(), true); break;
                        case "VirtualNetworkGatewayConnectionsSetSharedKey" : WriteObject(CreateVirtualNetworkGatewayConnectionsSetSharedKeyParameters(), true); break;
                        case "VirtualNetworksCreateOrUpdate" : WriteObject(CreateVirtualNetworksCreateOrUpdateParameters(), true); break;
                        case "VirtualNetworksDelete" : WriteObject(CreateVirtualNetworksDeleteParameters(), true); break;
                        case "VirtualNetworksGet" : WriteObject(CreateVirtualNetworksGetParameters(), true); break;
                        case "VirtualNetworksList" : WriteObject(CreateVirtualNetworksListParameters(), true); break;
                        case "VirtualNetworksListAll" : WriteObject(CreateVirtualNetworksListAllParameters(), true); break;
                        case "VirtualNetworksListAllNext" : WriteObject(CreateVirtualNetworksListAllNextParameters(), true); break;
                        case "VirtualNetworksListNext" : WriteObject(CreateVirtualNetworksListNextParameters(), true); break;
                        default : WriteWarning("Cannot find the method by name = '" + MethodName + "'."); break;
                    }
                }
            });
        }

    }
}
